{"ast":null,"code":"var _jsxFileName = \"/Users/Tina/Downloads/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLoggout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedLogInInfo = localStorage.getItem(\"isLoggedIn\"); // reaching out to local storage, call getItem and search for isLoggedIn info\n    //  returns info on isLoggedIn\n\n    if (storedLogInInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"LCpfS0X6AUJI1DI4sDB5o/oXtdQ=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/Tina/Downloads/01-starting-project/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLoggout","onLogin","email","password","AuthContextProvider","props","setLoggedIn","storedLogInInfo","localStorage","getItem","setIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","onLogout","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAFmB;AAGtCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACN,UAAD,EAAaO,WAAb,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAxB,CADc,CAEd;AACA;;AAEA,QAAIF,eAAe,KAAK,GAAxB,EAA6B;AAC3BG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,aAAa,GAAG,MAAM;AAC1BH,IAAAA,YAAY,CAACI,UAAb,CAAwB,YAAxB;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAM;AACzBL,IAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,UAAU,EAAEA,UADP;AAELgB,MAAAA,QAAQ,EAAEJ,aAFL;AAGLV,MAAAA,OAAO,EAAEY;AAHJ,KADT;AAAA,cAOGR,KAAK,CAACW;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCM;;GAAMZ,mB;;KAAAA,mB;AAmCb,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLoggout: () => {},\n  onLogin: (email, password) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedLogInInfo = localStorage.getItem(\"isLoggedIn\");\n    // reaching out to local storage, call getItem and search for isLoggedIn info\n    //  returns info on isLoggedIn\n\n    if (storedLogInInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        onLogin: loginHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}